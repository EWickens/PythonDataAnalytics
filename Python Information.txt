Vocab is a set
For each word have a probability of each word as positive (for positive)
For each word have a probability of each word as negative (for negative)
Calculate probability of overall sentence by working out the positivity of each word in the sentence

Extract all possible unique words from a dataset
Calculate the frequency of existence of each of those words

Words can exist in both the neg and positive lists
If good occurs 500 times, and 300 of thse is positive and 200 of those is negative. the positivity of the word is 100

Calculate probability of a sentence overall twice. one for negative one for positive
Compare the two probability then. 

You can use a library called collection in python to get frequency in the file.

//My shit

Split the data set again and compare each word to the words you have in the unique dictionary


Bayes
-----------------------------------------------------

in stage 2, bayesian classificaion is just putting the overall occurences of a word
In stage 3, if a word does not occur in a dictionary, replace its value with one

There's a library to take out the symbols - expressions?
